openapi: 3.1.0
info:
    title: Todo Application
    description: 이 프로젝트는 Layered Architecture를 기반으로 한 Todo Application API 를 개발하는 과제입니다.
    version: 1.0.0
servers:
    -   url: 'https://api.wild-backend-todo.com/v1'
paths:
    /tasks:
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                contents:
                                    type: string
                                    description: 내용
                                    example: "오늘 할 일"
            responses:
                200:
                    description: Task 저장 결과
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: number
                                        description: 저장 된 id 값
                                        example: 1
                                    contents:
                                        type: string
                                        description: 내용
                                        example: "오늘 할 일"
                400:
                    description: 잘못된 입력 형식
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: "문자열 타입이 아닙니다."
        get:
            responses:
                200:
                    description: Todo 목록 조회
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    tasks:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: number
                                                    example: 1
                                                contents:
                                                    type: string
                                                    example: "오늘 할 일"
    /tasks/{taskId}:
        get:
            parameters:
                -   name: taskId
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: Task 목록 조회
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Task'
        patch:
            parameters:
                -   name: taskId
                    in: path
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                contents:
                                    type: string
                                    description: 내용
                                    example: "내일 할 일"
            responses:
                200:
                    description: Task 수정 결과
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: number
                                        description: 저장 된 id 값
                                        example: 1
                                    contents:
                                        type: string
                                        description: 내용
                                        example: "내일 할 일"
        delete:
            parameters:
                -   name: taskId
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: Task 삭제 결과
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        description: 삭제 성공
                                        example: "success"

components:
    schemas:
        Task:
            type: object
            properties:
                id:
                    type: integer
                contents:
                    type: string
